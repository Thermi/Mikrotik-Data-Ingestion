# generated with grok_pipeline_patterns_to_plaintext.py from /scripts/

USERNAME [a-zA-Z0-9._-]+
USER %{USERNAME}
EMAILLOCALPART [a-zA-Z0-9!#$%&'*+\-/=?^_`{|}~]{1,64}(?:\.[a-zA-Z0-9!#$%&'*+\-/=?^_`{|}~]{1,62}){0,63}
EMAILADDRESS %{EMAILLOCALPART}@%{HOSTNAME}
INT (?:[+-]?(?:[0-9]+))
BASE10NUM (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+)))
NUMBER (?:%{BASE10NUM})
BASE16NUM (?<![0-9A-Fa-f])(?:[+-]?(?:0x)?(?:[0-9A-Fa-f]+))
BASE16FLOAT \b(?<![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa-f]+(?:\.[0-9A-Fa-f]*)?)|(?:\.[0-9A-Fa-f]+)))\b
POSINT \b(?:[1-9][0-9]*)\b
NONNEGINT \b(?:[0-9]+)\b
WORD \b\w+\b
NOTSPACE \S+
SPACE \s*
DATA .*?
GREEDYDATA .*
QUOTEDSTRING (?>(?<!\\)(?>"(?>\\.|[^\\"]+)+"|""|(?>'(?>\\.|[^\\']+)+')|''|(?>`(?>\\.|[^\\`]+)+`)|``))
UUID [A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}
URN urn:[0-9A-Za-z][0-9A-Za-z-]{0,31}:(?:%[0-9a-fA-F]{2}|[0-9A-Za-z()+,.:=@;$_!*'/?#-])+
MAC (?:%{CISCOMAC}|%{WINDOWSMAC}|%{COMMONMAC})
CISCOMAC (?:(?:[A-Fa-f0-9]{4}\.){2}[A-Fa-f0-9]{4})
WINDOWSMAC (?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})
COMMONMAC (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})
IPV6 ((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?
IPV4 (?<![0-9])(?:(?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))(?![0-9])
IP (?:%{IPV6}|%{IPV4})
HOSTNAME \b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)
IPORHOST (?:%{IP}|%{HOSTNAME})
HOSTPORT %{IPORHOST}:%{POSINT}
PATH (?:%{UNIXPATH}|%{WINPATH})
UNIXPATH (/[[[:alnum:]]_%!$@:.,+~-]*)+
TTY (?:/dev/(pts|tty([pq])?)(\w+)?/?(?:[0-9]+))
WINPATH (?>[A-Za-z]+:|\\)(?:\\[^\\?*]*)+
URIPROTO [A-Za-z]([A-Za-z0-9+\-.]+)+
URIHOST %{IPORHOST}(?::%{POSINT})?
URIPATH (?:/[A-Za-z0-9$.+!*'(){},~:;=@#%&_\-]*)+
URIQUERY [A-Za-z0-9$.+!*'|(){},~@#%&/=:;_?\-\[\]<>]*
URIPARAM \?%{URIQUERY}
URIPATHPARAM %{URIPATH}(?:\?%{URIQUERY})?
URI %{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST})?(?:%{URIPATH}(?:\?%{URIQUERY})?)?
MONTH \b(?:[Jj]an(?:uary|uar)?|[Ff]eb(?:ruary|ruar)?|[Mm](?:a|Ã¤)?r(?:ch|z)?|[Aa]pr(?:il)?|[Mm]a(?:y|i)?|[Jj]un(?:e|i)?|[Jj]ul(?:y|i)?|[Aa]ug(?:ust)?|[Ss]ep(?:tember)?|[Oo](?:c|k)?t(?:ober)?|[Nn]ov(?:ember)?|[Dd]e(?:c|z)(?:ember)?)\b
MONTHNUM (?:0?[1-9]|1[0-2])
MONTHNUM2 (?:0[1-9]|1[0-2])
MONTHDAY (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])
DAY (?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)
YEAR (?>\d\d){1,2}
HOUR (?:2[0123]|[01]?[0-9])
MINUTE (?:[0-5][0-9])
SECOND (?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)
TIME (?!<[0-9])%{HOUR}:%{MINUTE}(?::%{SECOND})(?![0-9])
DATE_US %{MONTHNUM}[/-]%{MONTHDAY}[/-]%{YEAR}
DATE_EU %{MONTHDAY}[./-]%{MONTHNUM}[./-]%{YEAR}
ISO8601_TIMEZONE (?:Z|[+-]%{HOUR}(?::?%{MINUTE}))
ISO8601_SECOND %{SECOND}
TIMESTAMP_ISO8601 %{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?
DATE %{DATE_US}|%{DATE_EU}
DATESTAMP %{DATE}[- ]%{TIME}
TZ (?:[APMCE][SD]T|UTC)
DATESTAMP_RFC822 %{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME} %{TZ}
DATESTAMP_RFC2822 %{DAY}, %{MONTHDAY} %{MONTH} %{YEAR} %{TIME} %{ISO8601_TIMEZONE}
DATESTAMP_OTHER %{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{TZ} %{YEAR}
DATESTAMP_EVENTLOG %{YEAR}%{MONTHNUM2}%{MONTHDAY}%{HOUR}%{MINUTE}%{SECOND}
SYSLOGTIMESTAMP %{MONTH} +%{MONTHDAY} %{TIME}
PROG [\x21-\x5a\x5c\x5e-\x7e]+
SYSLOGPROG %{PROG:[process][name]}(?:\[%{POSINT:[process][pid]:int}\])?
SYSLOGHOST %{IPORHOST}
SYSLOGFACILITY <%{NONNEGINT:[log][syslog][facility][code]:int}.%{NONNEGINT:[log][syslog][priority]:int}>
HTTPDATE %{MONTHDAY}/%{MONTH}/%{YEAR}:%{TIME} %{INT}
QS %{QUOTEDSTRING}
SYSLOGBASE %{SYSLOGTIMESTAMP:timestamp} (?:%{SYSLOGFACILITY} )?%{SYSLOGHOST:[host][hostname]} %{SYSLOGPROG}:
LOGLEVEL ([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo?(?:rmation)?|INFO?(?:RMATION)?|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)
BSDSYSLOGHEADER ^<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} ?%{SYSLOGHOST:log_source}
BSDSYSLOGHEADER_OPT (%{BSDSYSLOGHEADER} )?
GENERAL_SYSLOG %{BSDSYSLOGHEADER} %{DATA:message}$
MTIKBSDSYSLOG_NEW ^(?:%{BSDSYSLOGHEADER})? (%{NOTSPACE:syslog_prefix})?
MTIKBSDSYSLOG ^<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{WORD:log_source} %{GREEDYDATA:syslog_message}
MTIK_TCP_FLAGS ( \(%{DATA:proto_flags}\))?
MTIK_PROTO_FIELD proto %{DATA:proto}%{MTIK_TCP_FLAGS}
MIKROTIKCONNECTIONSTATE (\sconnection-state:%{DATA:connection_state})?
MIKROTIK_FW_MARK_CTSTATE (\spacket-mark:%{NOTSPACE:packet_mark})?%{MIKROTIKCONNECTIONSTATE}
MIKROTIKFIREWALLNONAT_PROTO_DATA src-mac %{MAC}, %{MTIK_PROTO_FIELD}, %{IP:src_ip}:%{INT:src_port}->%{IP:dst_ip}:%{INT:dst_port}, len %{INT:length}
MIKROTIKFIREWALLNONAT_PROTO_NO_PORTS_DATA src-mac %{MAC}, %{MTIK_PROTO_FIELD}, %{IP:src_ip}->%{IP:dst_ip}, len %{INT:length}
MIKROTIKFIREWALLNONAT src-mac %{MAC}, %{MTIK_PROTO_FIELD}, %{IP:src_ip}(:%{INT:src_port})?->%{IP:dst_ip}(:%{INT:dst_port})?, len %{INT:length}
MIKROTIKFIREWALLNAT src-mac %{MAC}, %{MTIK_PROTO_FIELD}, %{IP:src_ip}(:%{INT:src_port})?->%{IP:dst_ip}(:%{INT:dst_port})?, NAT \(%{IP:nat_osrc_ip}(:%{INT:nat_osrc_port})?->%{IP:nat_nsrc_ip}(:%{INT:nat_nsrc_port})?\)->%{IP:nat_dst_ip}(:%{INT:nat_dstport})?, len %{INT:length}
MIKROTIKFIREWALLNAT2 in:%{DATA:src_zone} out:%{DATA:dst_zone}, %{MTIK_PROTO_FIELD},%{MIKROTIK_FW_MARK_CTSTATE} %{IP:src_ip}(:%{INT:src_port})?->%{IP:dst_ip}(:%{INT:dst_port})?, NAT %{IP:nat_osrc_ip}(:%{INT:nat_osrc_port})?->\(%{IP:nat_nsrc_ip}(:%{INT:nat_nsrc_port})?->%{IP:nat_dst_ip}:(%{INT:nat_dstport})?\), len %{INT:length}
MIKROTIKFIREWALL (\s*%{DATA:LogPrefix})? %{WORD:LogChain}: in:%{DATA:src_zone} out:%{DATA:dst_zone},%{MIKROTIK_FW_MARK_CTSTATE} (?:%{MIKROTIKFIREWALLNONAT_PROTO_DATA}|%{MIKROTIKFIREWALLNONAT_PROTO_NO_PORTS_DATA}|%{MIKROTIKFIREWALLNAT}|%{MIKROTIKFIREWALLNAT2}|%{MIKROTIKFIREWALLNONAT})
MIKROTIKDNSQUERY query from %{IP:src_ip}: #%{INT:query_id} %{GREEDYDATA:query}
MIKROTIKDNSANSWER done query: #%{INT:query_id} %{GREEDYDATA:query}
MIKROTIKDNS (?:%{MIKROTIKDNSANSWER}|%{MIKROTIKDNSQUERY})
MIKROTIKWEBPROXY web-proxy: %{IP:src_ip} %{WORD:request_type} %{URI:url}
MIKROTIKDHCP %{DATA:DHCP_zone} %{WORD:action} %{IP:src_ip} (?:from|to) %{MAC:src_mac}
MIKROTIKLOGINOUT ^user %{WORD:user_name} (?<action>logged (?:out|in)) from %{IP:src_ip} via %{WORD:app_src}
MIKROTIKLOGINFAIL ^%{WORD:action} %{WORD:action_result} for user %{WORD:user_name} from %{IP:src_ip} via %{WORD:app_src}
MIKROTIKRULECHANGE ^(?<config_change>%{DATA} changed) by %{WORD:user_name}$
MTIKLOGIN (?:%{MIKROTIKLOGINOUT}|%{MIKROTIKLOGINFAIL}|%{MIKROTIKRULECHANGE})
MTIKWIFIASSOC %{USER:src_int}: %{MAC:src_mac} attempts to %{USER:action}
MTIKWIFIACL %{USER:src_int}: %{MAC:src_mac} (?<action>not in local ACL), by default %{USER:action_result}
MTIKWIFIDEAUTH %{USER:src_int}: %{DATA:greed} %{MAC:src_mac}, sent %{USER:action}
MTIKWIFICONN %{MAC:src_mac}\@%{USER:src_int}: (?<action>connected)$
MTIKWIFIDISCONN %{MAC:src_mac}\@%{USER:src_int}: %{USER:action}, %{USER:action_result}$
MTIKWIFIDISCON2 %{MAC:src_mac}\@%{USER:src_int}: (?<action>disconnected), received %{WORD:reason}%{GREEDYDATA:crap}$
MTIKWIFIWDSAP %{MAC:src_mac}\@%{USER:src_int}: (?<action>connected), is %{USER:wifi_type}, wants %{USER:wifi_req}
MTIKWIFIBRSET %{USER:interface}: %{USER:action_result} to %{DATA:action} for %{USER}, reason: %{DATA:reason}
MTIKWIFIINTEVE ^(?<action>Interface change) interface=%{USER:src_int} %{DATA:status}
MTIKWIFI (?:%{MTIKWIFIDISCON2}|%{MTIKWIFIDISCONN}|%{MTIKWIFICONN}|%{MTIKWIFIWDSAP}|%{MTIKWIFIASSOC}|%{MTIKWIFIACL}|%{MTIKWIFIDEAUTH}|%{MTIKWIFIBRSET}|%{MTIKWIFIINTEVE})
MTIKHSPOTSTART ^(?<user>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:
MTIKHSPOTNEWHOST ^%{USERNAME:src_int}\:%{SPACE}(?<action>new host detected)%{SPACE}%{MAC:src_mac}\/%{IP:src_ip}%{SPACE}by%{SPACE}%{WORD:protocol}%{SPACE}\:%{NUMBER:src_port:int} \-\> %{IP:dst_ip}\:%{NUMBER:dst_port:int}$
MTIKHSPOTLOGINMETHOD ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>trying to log in) by %{USERNAME:login_method}$
MTIKHSPOTLOGIN ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>%{USER}%{SPACE}%{WORD})$
MTIKHSPOTLOGIN2 ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>%{USER}%{SPACE}%{WORD:action_result})(?:\->|\:)%{SPACE}?%{GREEDYDATA:reason}$
MTIKHSPOTLOGINFAIL ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>login failed)\:%{SPACE}?%{GREEDYDATA:reason}
MTIKHSPOTPROFILE ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>using profile)%{SPACE}?\<?%{USERNAME:ip_profile}?\>?$
MTIKHSPOTQUEUE ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>(?:adding|removing) queue)%{SPACE}?\<%{GREEDYDATA:user_queue}\>$
MTIKHSPOTQUEUE2 ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>(?:removing) queue)$
MTIKHSPOTIPPOOL ^(?<user_id>T\-%{MAC:src_mac}|%{USERNAME})%{SPACE}\(%{IP:src_ip}\)\:%{SPACE}(?<action>getting ip address)%{SPACE}(?<crap>from pool)$
MTIKHSPOT (?:%{MTIKHSPOTLOGINMETHOD}|%{MTIKHSPOTIPPOOL}|%{MTIKHSPOTLOGIN}|%{MTIKHSPOTNEWHOST}|%{MTIKHSPOTPROFILE}|{MTIKHOTSPOTQUEUE2}|{MTIKHOTSPOTQUEUE}|%{MTIKHSPOTLOGINFAIL}|%{MTIKHSPOTLOGIN2})
MIKROTIKMSGS (?:%{MIKROTIKFIREWALL}|%{MIKROTIKDHCP}|%{MTIKHSPOT}|%{MTIKWIFI}|%{MTIKLOGIN})
MIKROTIKMSGS2 %{BSDSYSLOGHEADER}(?:%{MIKROTIKFIREWALL}|%{MIKROTIKDHCP}|%{MTIKHSPOT}|%{MTIKWIFI}|%{MTIKLOGIN})
